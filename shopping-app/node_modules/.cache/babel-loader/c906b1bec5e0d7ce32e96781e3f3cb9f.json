{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    itemsList: [],\n    totalQuantity: 0,\n    showCart: false\n  },\n  reducers: {\n    addToCart(state, action) {\n      // state.changed = true;\n      const newItem = action.payload; // to check if the item is already available\n\n      const existingItem = state.itemsList.find(item => item.id === newItem.id);\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.price += newItem.price;\n      } else {\n        state.itemsList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name\n        });\n        state.totalQuantity++;\n      }\n    },\n\n    removeFromCart() {},\n\n    setShowCart(state) {\n      state.showCart = true;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/home/ankit/Redux/shopping-app/Redux-Shopping-Cart-App/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","itemsList","totalQuantity","showCart","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","price","push","totalPrice","removeFromCart","setShowCart","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE,EADC;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB;AACF,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB,CAFuB,CAGvB;;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,SAAN,CAAgBU,IAAhB,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EADX,CAArB;;AAIA,UAAIH,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,KAAb,IAAsBP,OAAO,CAACO,KAA9B;AACD,OAHD,MAGO;AACLT,QAAAA,KAAK,CAACL,SAAN,CAAgBe,IAAhB,CAAqB;AACnBH,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADO;AAEnBE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFI;AAGnBD,UAAAA,QAAQ,EAAE,CAHS;AAInBG,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJD;AAKnBhB,UAAAA,IAAI,EAAES,OAAO,CAACT;AALK,SAArB;AAOAO,QAAAA,KAAK,CAACJ,aAAN;AACD;AACF,KAtBO;;AAuBRgB,IAAAA,cAAc,GAAG,CAAE,CAvBX;;AAwBRC,IAAAA,WAAW,CAACb,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACH,QAAN,GAAiB,IAAjB;AACD;;AA1BO;AAPkB,CAAD,CAA7B;AAqCA,OAAO,MAAMiB,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AACP,eAAevB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    itemsList: [],\n    totalQuantity: 0,\n    showCart: false,\n  },\n  reducers: {\n    addToCart(state, action) {\n        // state.changed = true;\n      const newItem = action.payload;\n      // to check if the item is already available\n      const existingItem = state.itemsList.find(\n        (item) => item.id === newItem.id\n      );\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.price += newItem.price;\n      } else {\n        state.itemsList.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.name,\n        });\n        state.totalQuantity++;\n      }\n    },\n    removeFromCart() {},\n    setShowCart(state) {\n      state.showCart = true;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n"]},"metadata":{},"sourceType":"module"}